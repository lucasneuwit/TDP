@model TDP.Models.Application.DataTransfer.MovieCollection
@{
    int totalPages = Convert.ToInt32(Math.Ceiling(Convert.ToDecimal(Model.TotalResults) / 10));
}
<div class="text-center">
    <h1 class="display-4">Movie app </h1>
    <form asp-controller="Movie" asp-action="Search" method="get">
<div class="input-group mb-3">
            <input type="text" id="title" name="title" class="form-control" placeholder="Title">
            <input type="text" id="releaseYear" name="releaseYear" class="form-control" placeholder="Year released">

        <select class="custom-select" name="type" id="type">
            <option value="movie" selected>Movies</option>
            <option value="series">Series</option>
        </select>
        <div class="input-group-append">
            <button class="btn btn-outline-secondary" type="submit">Search</button>
                <input type="hidden" id="pageNumber" name="pageNumber" value="1" />
        </div>

    </div>
    </form>
     @if (Model.Movies==null)
    {
        <h2>No results found for '@Model.SearchString'</h2>
    }
    else
    {
        <div class="row row-cols-3 g-3">
            @foreach (var x in Model.Movies!)
            {
                <div class="col-lg-3 col-sm-6 d-flex">
                    <div class="card">
                        @if (x.Poster =="N/A")
                        {
                            <img src="https://cdn-icons-png.flaticon.com/512/4263/4263893.png" class="card-img-top" />
                        }
                        else
                        {
                            <img src="@Url.Content(x.Poster)" class="card-img-top" />
                        }
                        
                        <div class="card-body">
                            <h5 class="card-title">@Html.DisplayFor(item => x.Title)</h5>
                            <a href="@Url.Action("FindById","Movie", new {id=x.imdbID,type=x.Type},null)" class="btn stretched-link"></a>

                        </div>
                    </div>
                </div>
                }
        </div>
    }
    <div>
        @if (totalPages > 1)
        {
            <ul class="pagination align-content-center">
                @if (Model.CurrentPage != 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Search", new { title =Model.SearchString,releaseYear = Model.Released, type = Model.Type,pageNumber = 1 })">&laquo</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Search", new { title =Model.SearchString ,releaseYear = Model.Released, type = Model.Type, pageNumber = Model.CurrentPage - 1, })">&lsaquo;</a>
                    </li>
                }
                @for (int i = Model.CurrentPage - 2; (i >= 0 && i <= Model.CurrentPage - 1); i++)
                {
                    if (i == 0)
                    {
                        
                    }
                    else
                    {
                    <li class="@(i == Model.CurrentPage ? "page-item active" : "page-item")">
                            <a class="page-link" href="@Url.Action("Search", new { title =Model.SearchString,releaseYear = Model.Released ,type = Model.Type,pageNumber = (i)  })">@(i)</a>
                    </li>
                    }
                }
                @for (int i = Model.CurrentPage; (i <= totalPages && i <= Model.CurrentPage + 2); i++)
                {
                    <li class="@(i == Model.CurrentPage ? "page-item active" : "page-item")">
                        <a class="page-link" href="@Url.Action("Search", new { title =Model.SearchString,releaseYear = Model.Released, type = Model.Type,pageNumber = i, })">@i</a>
                    </li>
                }
                @if (Model.CurrentPage != totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Search", new { title =Model.SearchString,releaseYear = Model.Released , type = Model.Type, pageNumber = Model.CurrentPage + 1 })">&rsaquo;</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Search", new { title =Model.SearchString,releaseYear = Model.Released , type = Model.Type, pageNumber = totalPages })">&raquo</a>
                    </li>
                }
            </ul>
        <a asp-controller="Home" asp-action="Index">Back to Home</a>
    
       
    }
    </div>
</div>
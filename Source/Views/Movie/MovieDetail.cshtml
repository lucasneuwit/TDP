@inject IConfiguration Configuration
@model TDP.Models.Application.MovieDTO;
@{

    ViewData["Title"] = "FindById";
}

<h1>@Html.DisplayFor(model => model.Title)</h1>

<div>
    <h4>Details</h4>
    <hr />
    <div class="row align-content-sm-center">
        <div class="col-sm-6">
            <dl class="row align-content-sm-center">
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Type)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Type)
                </dd>
                <div class="w-100"></div>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Released)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Released)
                </dd>
                <div class="w-100"></div>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Runtime)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Runtime) mins
                </dd>
                <div class="w-100"></div>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Actors)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Actors)
                </dd>
                <div class="w-100"></div>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Director)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Director)
                </dd>
                <div class="w-100"></div>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Writer)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Writer)
                </dd>
                <div class="w-100"></div>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Plot)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Plot)
                </dd>
                @if (Model is TDP.Models.Application.SeriesDTO seriesDTO)
                {
                    <div class="w-100"></div>
                    <dt class="col-sm-3">
                        Total Seasons
                    </dt>
                    <dd class="col-sm-9">
                        @Html.DisplayFor(model => seriesDTO.totalSeasons)
                    </dd>
                }

                <!-- Box for displaying rating and comment -->
                <dd class="col-sm-9">
                    
                    <h4>Your rating</h4>
                    <div id="movieRatingBox" style="display: none;">
                        <dl>
                            <dt style="padding:0.5rem;">Rating: <span id="movieRating" style="font-weight: normal;"></span></dt>

                            <dt style="padding:0.5rem;">Comment: <span id="movieComment" style="font-weight: normal;"></span></dt>
                        </dl>
                    </div>
                    <!-- Rating form -->
                    <form id="rateMovie" method="post" asp-controller="Movie" asp-action="RateMovie">
                        <input type="hidden" name="imdbId" value="@Model.imdbID" />

                            <!-- Input for Rating -->
                    <dt id="inputRating" style="padding:0.5rem;">Rating: <input type="number" name="rating" min="1" max="5" required /> </dt>


                    <!-- Input for Comment (optional) -->
                    <dt id="inputComment" style="padding:0.5rem;">Comment: <textarea name="comment"></textarea> </dt>

                    <button style="margin-top:1rem;" class="btn btn-outline-secondary" type="button" id="rateMovieButton">Rate</button>
                    </form>

                    <!-- Edit movie rating form -->
                    <form id="editMovieRating" method="post" asp-controller="Movie" asp-action="RateMovie">
                        <input type="hidden" name="imdbId" value="@Model.imdbID" />

                        <button style="margin-top:1rem;" class="btn btn-outline-secondary" type="button" id="editMovieRatingButton">Edit Rating</button>
                    </form>
                    <!-- Remove movie rating form -->
                    <form id="removeMovieRating" method="post" asp-controller="Movie" asp-action="RemoveMovieRating">
                        <input type="hidden" name="imdbId" value="@Model.imdbID" />

                        <button style="margin-top:1rem;" class="btn btn-outline-secondary" type="button" id="removeMovieRatingButton">Remove Rating</button>
                    </form>
                <div id="ratingStatus" class="alert" style="display:none;"></div>
                </dd>

            </dl>
        </div>

        <!-- Right column for rating box, image, watchlist forms, and text -->
        <div class="col-sm-6 align-content-sm-center" style="text-align:center;">

            <!-- Rating and image section -->
            @if (@Url.Content(Model.Poster) == "N/A")
            {
                <img class="fixed-size-image" src="https://cdn-icons-png.flaticon.com/512/4263/4263893.png" />
            }
            else
            {
                <img class="fixed-size-image" src="@Url.Content(Model.Poster)" />
            }


            <div style="min-height:100px;">
                <!-- Add to watchlist form -->
                <form style="padding:1em" id="addToWatchListForm" method="post" asp-controller="Movie" asp-action="AddToWatchList">
                    <input type="hidden" name="imdbId" value="@Model.imdbID" />
                    <button class="btn btn-outline-secondary" type="button" id="addToWatchListButton">Add to Watch List</button>
                </form>

                <!-- Remove from watchlist form -->
                <form style="padding:1em" id="removeFromWatchListForm" method="post" asp-controller="Movie" asp-action="RemoveFromWatchlist">
                    <input type="hidden" name="imdbId" value="@Model.imdbID" />
                    <button class="btn btn-outline-secondary" type="button" id="removeFromWatchListButton">Remove from your watchlist</button>
                </form>

                <h6 id="watchlistText">This movie is already added to your watchlist!</h6>
            </div>
        </div>
    </div>
</div>



<div style="margin-top: 20px;">
    <a asp-controller="Home" asp-action="Index">Back to Home</a>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        var inWatchlist = false;
        var hasRated = false;

        // Function to update the form visibility based on inWatchlist
        function updateFormVisibility() {
            if (inWatchlist) {
                $("#addToWatchListForm").hide();
                $("#watchlistText").show();
                $("#removeFromWatchListForm").show();
            } else {
                $("#addToWatchListForm").show();
                $("#watchlistText").hide();
                $("#removeFromWatchListForm").hide();
            }

            if (hasRated) {
                $("#rateMovie").hide();
                $("#removeMovieRating").show();
                $("#editMovieRating").show();
            } else {
                $("#rateMovie").show();
                $("#removeMovieRating").hide();
                $("#editMovieRating").hide();
            }
        }

        // Function to check if the movie is added to the Watchlist
        function checkIfAddedToWatchlist() {
            $.ajax({
                url: "/Movie/AddedToWatchList",
                type: "POST",
                data: {
                    imdbId: "@Model.imdbID"
                },
                success: function (data) {
                    inWatchlist = data;
                    updateFormVisibility();
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }

        function checkIfMovieRated() {
            $.ajax({
                url: "/Movie/GetUserRating",
                type: "POST",
                data: {
                    imdbId: "@Model.imdbID"
                },
                success: function (data) {
                    hasRated = data.movieId;

                    // Check the condition and update the form visibility
                    updateFormVisibility();


                    if (data.movieId) {

                        $("input[name='rating']").val(data.rating);


                        $("textarea[name='comment']").val(data.comment);

                        // Show the movieRatingBox and update its content
                        $("#movieRatingBox").show();
                        $("#movieRating").text(data.rating);
                        $("#movieComment").text(data.comment);
                    } else {
                        // Hide the movieRatingBox if there is no data
                        $("#movieRatingBox").hide();
                    }
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }

        // Initial check when the page loads
        checkIfMovieRated();
        checkIfAddedToWatchlist();

        // Set up the click event for Rate Movie
        $("#rateMovieButton").click(function () {
            $.ajax({
                url: "/Movie/RateMovie",
                type: "POST",
                data: $("#rateMovie").serialize(),
                success: function (data) {
                    console.log("exito");
                    console.log(data);
                    $("#ratingStatus").text(data.message).show();

                    if (data.success) {
                        console.log("chequie");
                        checkIfMovieRated();
                    }
                },
                error: function (xhr, status, error) {
                    console.log("error");
                    console.log(data);
                    $("#ratingStatus").removeClass("alert-success").addClass("alert-danger")
                        .text("An error occurred while rating the movie.")
                        .show();
                }
            });
        });

        // Set up the click event for Edit Movie Rating
        $("#editMovieRatingButton").click(function () {
            $("#ratingStatus").hide();
            $("#rateMovie").show();
            $("#removeMovieRating").hide();
            $("#editMovieRating").hide();
            $("#movieRatingBox").hide();

        });

        // Set up the click event for Remove Movie Rating
        $("#removeMovieRatingButton").click(function () {
            hasRated = false;
            $.ajax({
                url: "/Movie/RemoveMovieRating",
                type: "POST",
                data: $("#removeMovieRating").serialize(),
                success: function (data) {
                    $("input[name='rating']").val("");
                    $("textarea[name='comment']").val("");
                    $("#ratingStatus").hide();
                    checkIfMovieRated();
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        });

        // Set up the click event for Add to Watchlist
        $("#addToWatchListButton").click(function () {
            $.ajax({
                url: "/Movie/AddToWatchList",
                type: "POST",
                data: $("#addToWatchListForm").serialize(),
                success: function (data) {
                    checkIfAddedToWatchlist();
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        });

        // Set up the click event for Remove from Watchlist
        $("#removeFromWatchListButton").click(function () {
            $.ajax({
                url: "/Movie/RemoveFromWatchlist",
                type: "POST",
                data: $("#removeFromWatchListForm").serialize(),
                success: function (data) {
                    checkIfAddedToWatchlist();
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        });
    });

</script>
